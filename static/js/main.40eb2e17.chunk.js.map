{"version":3,"sources":["redux/reducers/app.js","redux/reducers/index.js","redux/store.js","components/MySelect/index.js","components/LoadingIndicator/index.js","redux/hooks/app.js","redux/actionCreators/app.js","components/TablePaginationActions/index.js","components/MyTablePagination/index.js","components/Row/index.js","redux/hooks/fetch.js","redux/actionCreators/fetch.js","components/MyTableContainer/index.js","components/MyTextField/index.js","routes/search-repos/index.js","routes/index.js","App.js","index.js"],"names":["initialState","loading","search","language","user","page","totalPages","perPage","sort","order","repos","setAppValue","state","payload","key","value","reducer","combineReducers","app","action","type","reducerWithResetHandler","handledState","undefined","store","createStore","rootReducer","applyMiddleware","thunk","MySelect","props","onChange","options","placeholder","hasEmpty","FormControl","InputLabel","Select","e","target","style","minWidth","MenuItem","map","element","disabled","label","defaultProps","useStyles","makeStyles","theme","root","height","width","LoadingIndicator","display","classes","className","LinearProgress","hidden","useAppValue","useSelector","useDispatchSetAppValue","dispatch","useDispatch","useCallback","TablePaginationActions","flexDirection","borderBottom","count","rowsPerPage","onPageChange","IconButton","onClick","event","Math","ceil","min","max","MyTablePagination","toolbar","breakpoints","down","setPage","setPerPage","TablePagination","rowsPerPageOptions","labelRowsPerPage","labelDisplayedRows","from","to","onRowsPerPageChange","ActionsComponent","Row","row","link","color","alignItems","marginRight","textDecoration","boxDesc","paddingBottom","paddingTop","description","fontSize","Fragment","TableRow","TableCell","component","scope","href","html_url","rel","full_name","align","stargazers_count","forks_count","Date","pushed_at","toLocaleDateString","colSpan","Box","margin","Typography","variant","useDispatchGet","url","a","fetch","method","response","json","parsedResponse","ok","Promise","reject","Error","message","get","MyTableContainer","list","maxHeight","marginBottom","setLoading","setTotalPages","setRepos","setSort","setOrder","useEffect","length","then","res","console","log","items","total_count","catch","err","toString","includes","alert","handleSort","column","Paper","TableContainer","Table","stickyHeader","size","TableHead","TableSortLabel","active","direction","TableBody","MyTextField","useState","aux","setAux","timeout","setTimeout","clearTimeout","TextField","flex","inst","marginTop","textAlign","controllers","justifyContent","inlineInputs","up","SearchRepos","setSearch","setLanguage","setUser","languages","Routes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40eb2e17.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  search: \"\",\n  language: \"\",\n  user: \"\", // search by user/organization\n  page: 0, // [1, 2..]\n  totalPages: 0, // [1, 2..]\n  perPage: 20, // [10, 20.., 100..]\n  sort: 'best-match', // [created, updated, pushed, full_name]\n  order: 'desc', // [asc, desc]\n  repos: [], // [facebook/reactjs, ...]\n};\n\nfunction setAppValue(state, payload) {\n  const {key, value} = payload;\n  return {...state, [key]: value};\n}\n\nexport default function reducer(state = initialState, action = '') {\n  switch (action.type) {\n    case 'SET_APP_VALUE':\n      return setAppValue(state, action.payload);\n    default:\n      return state;\n  }\n}\n","import {combineReducers} from 'redux';\nimport app from './app';\n\nconst reducer = combineReducers({\n  app,\n});\n\nconst reducerWithResetHandler = (state, action) => {\n  let handledState = state;\n  if (action.type === 'RESET_STATE') {\n    handledState = undefined;\n  }\n  return reducer(handledState, action);\n};\n\nexport default reducerWithResetHandler;\n","import {applyMiddleware, createStore} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nexport default function MySelect(props) {\n  const { onChange, options, placeholder, value, hasEmpty } = props;\n\n  return (\n    <FormControl>\n      <InputLabel>{placeholder}</InputLabel>\n      <Select\n        onChange={(e) => onChange(e.target.value)}\n        value={value}\n        placeholder={placeholder}\n        style={{ minWidth: 100 }}\n      >\n        {hasEmpty && (\n          <MenuItem value=\"\">{placeholder}</MenuItem>\n        )}\n        {options.map((element) => (\n          element.type === 'group'\n          ?\n            (<MenuItem key={`group-${element.value}`} disabled={true}>{element.label}</MenuItem>)\n          :\n            (<MenuItem key={`option-${element.value}`} value={element.value}>{element.label}</MenuItem>)\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n\nMySelect.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array,\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  hasEmpty: PropTypes.bool,\n};\n\nMySelect.defaultProps = {\n  placeholder: 'Selecione',\n  value: null,\n  options: [],\n  hasEmpty: true,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 10,\n    width: '100%',\n  },\n}));\n\nexport default function LoadingIndicator(props) {\n  const { display } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <LinearProgress hidden={!display} />\n    </div>\n  );\n};\n\nLoadingIndicator.propTypes = {\n  display: PropTypes.bool,\n};","import {useCallback} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {\n  setAppValue,\n} from 'redux/actionCreators/app';\n\nexport function useAppValue(key) {\n  return useSelector((state) => state.app[key]);\n}\n\nexport function useDispatchSetAppValue(key) {\n  const dispatch = useDispatch();\n  return useCallback(\n    (value) => dispatch(setAppValue(key, value)),\n    [dispatch, key], // TODO: checar\n  );\n}\n","export function setAppValue(key, value) {\n  return {\n    payload: {\n      key,\n      value,\n    },\n    type: 'SET_APP_VALUE',\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nexport default function TablePaginationActions(props) {\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'row',\n      '& > *': {\n        borderBottom: 'unset',\n      },\n    },\n  }));\n\n  const classes = useStyles();\n  const { count, page, rowsPerPage, onPageChange } = props;\n\n  const handleFirstPageButtonClick = (event) => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = (event) => {\n    if (page > 0)\n      onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    // it is only allowed to order the first 1000 items\n    onPageChange(event, Math.min(Math.ceil(1000 / rowsPerPage) - 1, Math.max(0, Math.ceil(count / rowsPerPage) - 1)));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {<FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {<KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(Math.min(count, 1000) / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {<KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(Math.min(count, 1000) / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {<LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};","import React from 'react';\nimport { makeStyles, TablePagination } from '@material-ui/core';\nimport { useAppValue, useDispatchSetAppValue } from 'redux/hooks/app';\nimport TablePaginationActions from 'components/TablePaginationActions';\n\nexport default function MyTablePagination(props) {\n\n  const useStyles = makeStyles((theme) => ({\n    toolbar: {\n      flexDirection: 'row',\n      [theme.breakpoints.down(600)]: {\n        flexDirection: 'column',\n      }\n    }\n  }));\n\n  const classes = useStyles();\n\n  const page = useAppValue('page');\n  const setPage = useDispatchSetAppValue('page');\n  const totalPages = useAppValue('totalPages');\n  const perPage = useAppValue('perPage');\n  const setPerPage = useDispatchSetAppValue('perPage');\n  \n  return (\n    <TablePagination\n      rowsPerPageOptions={[10, 20, 50, 100]}\n      classes={{\n        toolbar: classes.toolbar,\n      }}\n      labelRowsPerPage=\"Repositórios por página\"\n      count={totalPages}\n      rowsPerPage={perPage}\n      page={page}\n      labelDisplayedRows={({ from, to, count }) => (`Exibindo ${from} - ${to} de ${count} ${to >= 1000 ? '*(API Limit: 1000)' : ''}`)}\n      onPageChange={(e, page) => setPage(page)}\n      onRowsPerPageChange={(e) => setPerPage(e.target.value)}\n      ActionsComponent={TablePaginationActions}\n    />\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport LinkIcon from '@material-ui/icons/Link';\n\nexport default function Row(props) {\n  const { row } = props;\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        borderBottom: 'unset',\n      },\n    },\n    link: {\n      color: '#58a6ff',\n      display: 'flex',\n      alignItems: 'center',\n      width: 'fit-content',\n      '& > svg': {\n        marginRight: 4,\n      },\n      '&:hover': {\n        textDecoration: 'underline',\n      }\n    },\n    boxDesc: {\n      paddingBottom: 0,\n      paddingTop: 0,\n    },\n    description: {\n      fontSize: '.7rem',\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell component=\"th\" scope=\"row\" width={150}>\n          <a href={row.html_url} target=\"_blank\" rel=\"noreferrer\" className={classes.link}>\n            <LinkIcon /> \n            {row.full_name}\n          </a>\n        </TableCell>\n        <TableCell align=\"right\">{row.language}</TableCell>\n        <TableCell align=\"right\">{row.stargazers_count}</TableCell>\n        <TableCell align=\"right\">{row.forks_count}</TableCell>\n        <TableCell align=\"right\">{new Date(row.pushed_at).toLocaleDateString('pt-br')}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.boxDesc} colSpan={6}>\n          <Box margin={1}>\n            <Typography variant=\"caption\" component=\"div\" className={classes.description}>\n              {row.description || ''}\n            </Typography>\n            <Typography variant=\"caption\" component=\"div\" className={classes.description}>\n              {`Stars: ${row.stargazers_count} - Forks: ${row.forks_count} - Última Atualização: ${new Date(row.pushed_at).toLocaleDateString('pt-br')}`}\n            </Typography>\n          </Box>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n","import {useCallback} from 'react';\nimport {useDispatch} from 'react-redux';\nimport get from 'redux/actionCreators/fetch';\n\nexport function useDispatchGet() {\n  const dispatch = useDispatch();\n  return useCallback(\n    (url) => dispatch(get(url)),\n    [dispatch],\n  );\n}\n","function resolveHost() {\n  let github = \"https://api.github.com\";\n  return github;\n}\n\nexport default function get(url) {\n  return async () => {\n    try {\n      const host = resolveHost();\n      const response = await fetch(host + url, {\n        method: 'GET',\n      });\n      const parsedResponse = await response.json();\n      if (!response.ok) return Promise.reject(new Error(parsedResponse.message));\n      return parsedResponse;\n    } catch (e) {\n      return Promise.reject(new Error('Erro ao conectar com o Github'));\n    }\n  };\n}\n","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { TableSortLabel } from '@material-ui/core';\nimport Row from 'components/Row';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { useAppValue, useDispatchSetAppValue } from 'redux/hooks/app';\nimport { useDispatchGet } from 'redux/hooks/fetch';\n\nexport default function MyTableContainer(props) {\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'row',\n      '& > *': {\n        borderBottom: 'unset',\n      },\n    },\n    list: {\n      display: 'flex',\n      maxHeight: '60vh',\n      flexDirection: 'column',\n      marginBottom: 10,\n      width: '98%',\n    },\n  }));\n\n  const get = useDispatchGet();\n  const classes = useStyles();\n\n  const setLoading = useDispatchSetAppValue('loading');\n  const search = useAppValue('search');\n  const language = useAppValue('language');\n  const user = useAppValue('user'); // search by user/organization\n  const page = useAppValue('page');\n  const setPage = useDispatchSetAppValue('page');\n  const setTotalPages = useDispatchSetAppValue('totalPages');\n  const perPage = useAppValue('perPage');\n  const setRepos = useDispatchSetAppValue('repos');\n\n  const sort = useAppValue('sort');\n  const setSort = useDispatchSetAppValue('sort');\n  const order = useAppValue('order');\n  const setOrder = useDispatchSetAppValue('order');\n  const repos = useAppValue('repos');\n\n  useEffect(() => {\n    // github api requires at least one search parameter \n    if (search !== \"\" || language !== \"\" || user !== \"\") {\n      setLoading(true);\n      let url = '/search/repositories?q=';\n      if (search !== \"\") {\n        url += `${search}`;\n      }\n      if (language !== \"\") {\n        let lastChar = url[url.length - 1];\n        url += lastChar !== '=' ? '+' : ''; // concat get params\n        url += `language:${language}`;\n      }\n      if (user !== \"\") {\n        let lastChar = url[url.length - 1];\n        url += lastChar !== '=' ? '+' : ''; // concat get params\n        url += `user:${user}`;\n      }\n      url += `&page=${page + 1}`;\n      url += `&per_page=${perPage}`;\n      url += `&sort=${sort}`;\n      url += `&order=${order}`;\n      get(url)\n        .then((res) => {\n          console.log(res);\n          setRepos([])\n          setRepos(res.items)\n          setTotalPages(Math.ceil(res.total_count / perPage));\n          setLoading(false);\n        })\n        .catch((err) => {\n          setLoading(false);\n          // catch errors\n          if (err.toString().includes(\"first 1000\"))\n            alert(\"Só é possível listar os primeiros 1000 resultados, aprimore seus filtros\");\n          else if (err.toString().includes(\"rate limit exceeded\"))\n            alert(\"Muitas requisições, aguarde um tempo\");\n        })\n    }\n  }, [get, language, user, order, search, page, perPage, sort, setLoading, setRepos, setTotalPages]);\n\n  const handleSort = (column) => {\n    if (sort === column) {\n      if (order === 'asc') {\n        setSort('best-match');\n        setOrder('desc');\n      } else {\n        setOrder('asc')\n      }\n    } else {\n      setSort(column);\n      setOrder('desc');\n    }\n  }\n\n  useEffect(() => {\n    setPage(0);\n  }, [search, user, language, setPage]);\n  \n  return (\n    <Paper className={classes.list}>\n      <TableContainer component={Paper}>\n        <Table stickyHeader size=\"medium\" aria-label=\"collapsible table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                Repositório\n              </TableCell>\n              <TableCell align=\"right\">Linguagem</TableCell>\n              <TableCell align=\"right\">\n                <TableSortLabel\n                  active={sort === 'stars'}\n                  direction={sort === 'stars' ? order : 'desc'}\n                  onClick={() => handleSort('stars')}\n                >\n                  Estrelas\n                </TableSortLabel>\n              </TableCell>\n              <TableCell align=\"right\">\n                <TableSortLabel\n                  active={sort === 'forks'}\n                  direction={sort === 'forks' ? order : 'desc'}\n                  onClick={() => handleSort('forks')}\n                >\n                  Bifurcações\n                </TableSortLabel>\n              </TableCell>\n              <TableCell align=\"right\">\n                <TableSortLabel\n                  active={sort === 'updated'}\n                  direction={sort === 'updated' ? order : 'desc'}\n                  onClick={() => handleSort('updated')}\n                >\n                  Atualização\n                </TableSortLabel>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {repos.map((row) => (\n              <Row key={row.full_name} row={row} />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField } from '@material-ui/core';\n\nexport default function MyTextField(props) {\n  const { onChange, placeholder } = props;\n\n  const [aux, setAux] = useState(\"\");\n\n  // wait stop typing\n  useEffect(() => {\n    let timeout = setTimeout(() => {\n      onChange(aux);\n    }, 500);\n    return () => {\n      clearTimeout(timeout);\n    }\n  }, [aux, onChange]);\n\n  return (\n    <TextField\n      label={placeholder}\n      value={aux}\n      onChange={(e) => setAux(e.target.value)}\n    />\n  );\n};\n\nMyTextField.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport languages from 'mock/languages.json'; // all languages available on github\nimport MySelect from 'components/MySelect';\nimport LoadingIndicator from 'components/LoadingIndicator';\nimport MyTablePagination from 'components/MyTablePagination';\nimport { useAppValue, useDispatchSetAppValue } from 'redux/hooks/app';\nimport MyTableContainer from 'components/MyTableContainer';\nimport MyTextField from 'components/MyTextField';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    alignItems: 'center',\n  },\n  inst: {\n    marginTop: 10,\n    textAlign: 'center',\n    '& > h6': {\n      marginTop: 4,\n      marginBottom: 0,\n      [theme.breakpoints.down(600)]: {\n        display: 'none',\n      }\n    },\n  },\n  controllers: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    width: '100%',\n    margin: 10,\n    [theme.breakpoints.down(600)]: {\n      width: '90%',\n      flexDirection: 'column',\n    }\n  },\n  inlineInputs: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    [theme.breakpoints.up(600)]: {\n      width: '60%',\n    },\n    [theme.breakpoints.down(400)]: {\n      flexDirection: 'column',\n    }\n  },\n  toolbar: {\n    flexDirection: 'row',\n    [theme.breakpoints.down(600)]: {\n      flexDirection: 'column',\n    }\n  }\n}));\n\n\nexport default function SearchRepos() {\n  const classes = useStyles();\n\n  const loading = useAppValue('loading');\n  const setSearch = useDispatchSetAppValue('search');\n  const language = useAppValue('language');\n  const setLanguage = useDispatchSetAppValue('language');\n  const setUser = useDispatchSetAppValue('user');\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.inst}>\n        <h4>GitHub API</h4>\n        <h6>Busque repositórios por nome, usuário, organização e/ou linguagem.</h6>\n        <h6>A API não difere os resultados para consultas de repositórios por organização ou usuário, deve-se utilizar o mesmo campo.</h6>\n        <h6>As ordenações possíveis são stars, forks, updated e best-match.</h6>\n      </div>\n      <div className={classes.controllers}>\n        <div className={classes.inlineInputs}>\n          <MyTextField\n            onChange={setSearch}\n            placeholder=\"Busca Livre\"\n          />\n          <MyTextField\n            onChange={setUser}\n            placeholder=\"Buscar por Usuário\"\n          />\n        </div>\n        <MySelect\n          placeholder=\"Linguagem\"\n          hasEmpty={true}\n          onChange={setLanguage}\n          options={languages}\n          value={language}\n        />\n      </div>\n      <LoadingIndicator display={loading}/>\n      <MyTableContainer />\n      <MyTablePagination />\n    </div>\n  );\n};","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchRepos from './search-repos';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n  },\n}));\n\n\nexport default function Routes() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      {/* no route control needed */}\n      <SearchRepos />\n    </div>\n  );\n};","import React from 'react';\nimport {Provider} from 'react-redux';\nimport store from 'redux/store';\nimport Routes from 'routes/index';\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <Provider store={store}>\n      <Routes />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}